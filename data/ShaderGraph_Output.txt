vec2   id8_UVs = vec2(0.0f);  
float   id8_u = 0.0f;  
float   id8_v = 0.0f;  
// Input : UV 
id8_UVs = texCoord; 
id8_u = texCoord.x; 
id8_v = texCoord.y; 


float   id20_X = id8_u;  
float   id20_Y = 0.0f;  
float   id20_Z = 0.0f;  
vec3   id20_Vector3 = vec3(0.0f);  
// MakeVec3Node 
id20_Vector3 = vec3(id20_X, id20_Y, id20_Z); 


vec3   id22_A = id20_Vector3;  
float   id21_X = 0.0f;  

float   id21_Y = id8_v;  
float   id21_Z = 0.0f;  
vec3   id21_Vector3 = vec3(0.0f);  
// MakeVec3Node 
id21_Vector3 = vec3(id21_X, id21_Y, id21_Z); 


vec3   id22_B = id21_Vector3;  
vec3   id22_ReturnValue = vec3(0.0f);  
id22_ReturnValue = id22_A + id22_B;
vec3   id23_A = id22_ReturnValue;  
vec3   id9_Result = vec3(0.0f);  
// Input : Vec3 
id9_Result = vec3(4, 4, 4);

vec3   id23_B = id9_Result;  
vec3   id23_Result = vec3(0.0f);  
id23_Result = id23_A * id23_B;
vec3   Diffuse = id23_Result;  
vec3   Normal = vec3(0.0f);  
vec3   Specular = vec3(0.0f);  
float   Metallic = 0.0f;  
float   Roughness = 0.0f;  
float   Emissive = 0.0f;  
float   Opacity = 0.0f;  
vec3   WorldPositionOffset = vec3(0.0f);  
vec3   AmbientOcclusion = vec3(0.0f);  
vec3   Refraction = vec3(0.0f);  
vec2   TextureCoordinate = vec2(0.0f);  
vec3   Tangent = vec3(0.0f);  
float   Depth = 0.0f;  
// End MasterMaterialOutput